name: CI/CD Pipeline

on:
  push:
    branches: [ "develop" ]
  workflow_dispatch:

env:
  GCP_PROJECT_ID: cvfactory-456014
  GCP_REGION: asia-northeast3
  CLOUD_RUN_SERVICE_NAME: cvfactory-server
  # GCP_SERVICE_ACCOUNT: CVFactory-server-sa@cvfactory-456014.iam.gserviceaccount.com # 주석 처리, Cloud Run 서비스 실행 계정은 GCP 콘솔에서 설정된 것을 따름
  GAR_IMAGE_NAME: cv-factory/backend # Artifact Registry (asia.gcr.io)에 저장될 이미지 이름/경로
  # ARTIFACT_REGISTRY_REMOTE_REPO: ghcr-remote # 더 이상 사용하지 않음

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      # packages: 'write' # asia.gcr.io에 푸시 시 google-github-actions/auth가 처리하므로 GitHub Packages 권한은 직접 필요 없을 수 있음
      id-token: 'write' # Google Cloud 인증에 필요

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    # ghcr.io 관련 단계 제거:
    # - name: Convert repository name to lowercase
    #   id: string
    #   uses: ASzc/change-string-case-action@v6
    #   with:
    #     string: ${{ github.repository_owner }}/${{ github.event.repository.name }}

    # - name: Log in to GitHub Container Registry
    #   uses: docker/login-action@v3
    #   with:
    #     registry: ghcr.io
    #     username: ${{ github.actor }}
    #     password: ${{ secrets.GITHUB_TOKEN }}

    - name: Authenticate to Google Cloud
      id: auth # id 추가하여 Docker 인증 단계에서 사용 가능하도록 함
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}
        # Docker 레지스트리 (asia.gcr.io)에 대한 인증을 자동으로 구성하도록 함
        # auth@v2는 gcloud auth configure-docker를 자동으로 시도함.
        # 만약 특정 레지스트리 지정이 필요하면 다음과 같이 추가 가능:
        # gcloud_service_account: ${{ env.GCP_SERVICE_ACCOUNT }} # Authenticate to Google Cloud 단계의 주체는 빌더 SA
        # token_format: 'access_token'

    # 명시적으로 Docker가 asia.gcr.io에 인증하도록 gcloud 명령어 실행 (선택 사항, auth 액션이 처리하지 못할 경우)
    # - name: Configure Docker for GAR (asia.gcr.io)
    #   run: gcloud auth configure-docker asia.gcr.io --quiet

    - name: Build and push Docker image to GAR (asia.gcr.io)
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: asia.gcr.io/${{ env.GCP_PROJECT_ID }}/${{ env.GAR_IMAGE_NAME }}:${{ github.sha }}
        # labels: ${{ steps.meta.outputs.labels }} # meta 단계가 없으므로 주석 처리 또는 필요시 meta 정보 생성 단계 추가
        platforms: linux/amd64

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2

    - name: Deploy to Google Cloud Run
      id: deploy
      uses: google-github-actions/deploy-cloudrun@v2
      with:
        service: ${{ env.CLOUD_RUN_SERVICE_NAME }}
        region: ${{ env.GCP_REGION }}
        image: asia.gcr.io/${{ env.GCP_PROJECT_ID }}/${{ env.GAR_IMAGE_NAME }}:${{ github.sha }}
        env_vars: |
          PYTHONUNBUFFERED=1
          UPSTASH_REDIS_ENDPOINT=${{ secrets.UPSTASH_REDIS_ENDPOINT }}
          UPSTASH_REDIS_PORT=${{ secrets.UPSTASH_REDIS_PORT }}
        secrets: |
          GROQ_API_KEY=GROQ_API_KEY:latest
          COHERE_API_KEY=COHERE_API_KEY:latest
          UPSTASH_REDIS_PASSWORD=UPSTASH_REDIS_PASSWORD:latest
        flags: --allow-unauthenticated --port 8000 --cpu 1 --memory 2Gi --min-instances 0 --max-instances 1 --platform managed

    # If the deploy step failed, exit with an error
    - name: Check deploy status
      if: ${{ steps.deploy.outcome == 'failure' }}
      run: exit 1 