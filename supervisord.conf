[supervisord]
nodaemon=true
logfile=/var/log/supervisor/supervisord.log
pidfile=/var/run/supervisord.pid

[program:redis]
command=/usr/bin/redis-server --protected-mode no
autostart=true
autorestart=true
stdout_logfile=/var/log/supervisor/redis_stdout.log
stderr_logfile=/var/log/supervisor/redis_stderr.log

[program:fastapi]
command=uvicorn main:app --host 0.0.0.0 --port %(ENV_PORT)s --log-level info
directory=/app
autostart=true
autorestart=true
stdout_logfile=/var/log/supervisor/fastapi_stdout.log
stderr_logfile=/var/log/supervisor/fastapi_stderr.log

[program:celeryworker]
command=celery -A celery_app.celery_app worker -l info --concurrency %(ENV_WORKER_CONCURRENCY)s
directory=/app
autostart=true
autorestart=true
stdout_logfile=/var/log/supervisor/celery_stdout.log
stderr_logfile=/var/log/supervisor/celery_stderr.log
environment=WORKER_CONCURRENCY="1"

; Beat를 사용한다면 아래 섹션의 주석을 해제하세요.
; Cloud Run에서 단일 인스턴스로 Beat를 운영하려면 최소 인스턴스를 1로 설정해야 합니다.
; [program:celerybeat]
; command=celery -A celery_app.celery_app beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
; directory=/app
; autostart=true
; autorestart=true
; stdout_logfile=/var/log/supervisor/celerybeat_stdout.log
; stderr_logfile=/var/log/supervisor/celerybeat_stderr.log 